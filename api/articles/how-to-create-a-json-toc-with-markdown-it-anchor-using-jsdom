{"id":2,"type":"article","tweet":"1311016921006059527","slug":"how-to-create-a-json-toc-with-markdown-it-anchor-using-jsdom","url":"/articles/how-to-create-a-json-toc-with-markdown-it-anchor-using-jsdom/","title":"How to create a JSON table of contents with markdown-it and markdown-it-anchor","intro":"<p>There are some plugins to create a table of content using markdown-it, but sometimes you want to create a custom component for rendering your TOC.</p>\n<p>Here a simple example on how to get the table of content's tree with vanilla javascript without writing any markdown-it plugin.</p>\n<pre class=\"terminal gnome-terminal-image-container\"><div class=\"bar\"><div class=\"btn\"></div><div class=\"bar-title\">bash</div></div><div class=\"body\"><div class=\"image\"><img alt=\"o\" src=\"https://raw.githubusercontent.com/angelblanco/demo-markdown-it-anchor-toc-jsdom/master/demo.gif\"></div></div></pre>","description":"Steps by step guide parse your markdown's HTML at compile stage using node and jsdom with full github repository.","tags":["js","node","github"],"date":"September 18, 2020","readingTimeText":"5 min read","readingTimeMinutes":4.08,"words":816,"note":false,"shortLink":"/go/YS0y","toc":{"tree":[{"level":2,"title":"Basic markdown it setup","anchor":"#basic-markdown-it-setup","children":[]},{"level":2,"title":"Plain table of content","anchor":"#plain-table-of-content","children":[]},{"level":2,"title":"Tree table of content","anchor":"#tree-table-of-content","children":[]},{"level":2,"title":"Create the tables of content on the server-side with jsdom","anchor":"#create-the-tables-of-content-on-the-server-side-with-jsdom","children":[]},{"level":2,"title":"Conclusion","anchor":"#conclusion","children":[]}],"plain":[{"level":2,"title":"Basic markdown it setup","anchor":"#basic-markdown-it-setup"},{"level":2,"title":"Plain table of content","anchor":"#plain-table-of-content"},{"level":2,"title":"Tree table of content","anchor":"#tree-table-of-content"},{"level":2,"title":"Create the tables of content on the server-side with jsdom","anchor":"#create-the-tables-of-content-on-the-server-side-with-jsdom"},{"level":2,"title":"Conclusion","anchor":"#conclusion"}]},"meta":{"id":2,"date":"2020-09-18T00:00:00.000Z","tweet":"1311016921006059527","title":"How to create a JSON table of contents with markdown-it and markdown-it-anchor","description":"Steps by step guide parse your markdown's HTML at compile stage using node and jsdom with full github repository.","intro":"There are some plugins to create a table of content using markdown-it, but sometimes you want to create a custom component for rendering your TOC.\n\nHere a simple example on how to get the table of content's tree with vanilla javascript without writing any markdown-it plugin.\n\n::: gnome-terminal-image \"demo\" \"https://raw.githubusercontent.com/angelblanco/demo-markdown-it-anchor-toc-jsdom/master/demo.gif\"\n","tags":["js","node","github"],"published":true,"slug":"how-to-create-a-json-toc-with-markdown-it-anchor-using-jsdom","titleSlug":"how-to-create-a-json-table-of-contents-with-markdown-it-and-markdown-it-anchor","readingStats":{"text":"5 min read","minutes":4.08,"time":244800,"words":816}},"html":"<h2 id=\"basic-markdown-it-setup\">Basic markdown it setup</h2>\n<blockquote>\n<p>If you want to skip this process and run the demo on your personal computer you can clone the demo repository on Github</p>\n<div class=\"github-link-container\"><a href=\"https://github.com/angelblanco/demo-markdown-it-anchor-toc-jsdom\" target=\"__blank\" class=\"button is-medium\"><span class=\"icon\"><i class=\"fab fa-github\"></i></span><span>Clone the demo of this article on Github</span></a></div></blockquote>\n<p>On your javascript application, we want to install some dependencies first.</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-bash\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">bash</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-bash\"><code><span class=\"hl--token hl--function\">yarn</span> <span class=\"hl--token hl--function\">add</span> --dev markdown-it markdown-it-anchor\n</code></pre></div>\n  </pre>\n<p>Now let's convert some simple markdown to Html:</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--comment\">// demo.js</span>\n<span class=\"hl--token hl--keyword\">const</span> <span class=\"hl--token hl--maybe-class-name\">MarkdownIt</span> <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--function\">require</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--string\">'markdown-it'</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n<span class=\"hl--token hl--keyword\">const</span> md <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--keyword\">new</span> <span class=\"hl--token hl--class-name\">MarkdownIt</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">)</span>\n    <span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">use</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--function\">require</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--string\">\"markdown-it-anchor\"</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n<span class=\"hl--token hl--keyword\">const</span> markdownText <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--template-string\"><span class=\"hl--token hl--template-punctuation hl--string\">`</span><span class=\"hl--token hl--string\">\n# First header\nSome content\n\n## Second-level header\nMore content\n### Third level header\n## Another second-level header\n</span><span class=\"hl--token hl--template-punctuation hl--string\">`</span></span><span class=\"hl--token hl--punctuation\">;</span>\n\n<span class=\"hl--token hl--keyword\">const</span> html <span class=\"hl--token hl--operator\">=</span> md<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">render</span><span class=\"hl--token hl--punctuation\">(</span>markdownText<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n<span class=\"hl--token hl--console hl--class-name\">console</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">log</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">{</span> html <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n</code></pre></div>\n  </pre>\n<h2 id=\"plain-table-of-content\">Plain table of content</h2>\n<p>The first approach will be to create a plain TOC, that returns a one level array with the title, the anchor, and the associated level. Using this type of TOC could give you a really clear component, avoiding the extra complexity of recursion.</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--keyword\">function</span> <span class=\"hl--token hl--function\">createPlainToc</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--parameter\">domElement</span><span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--punctuation\">{</span>\n    <span class=\"hl--token hl--keyword\">const</span> headers <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--known-class-name hl--class-name\">Array</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--keyword hl--module\">from</span><span class=\"hl--token hl--punctuation\">(</span>domElement<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">querySelectorAll</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--string\">'h1, h2, h3, h4, h5, h6, h7'</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n    <span class=\"hl--token hl--comment\">// This will create a plain array with the level, the anchor and the header title</span>\n    <span class=\"hl--token hl--keyword hl--control-flow\">return</span> headers<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">map</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--parameter\">header</span><span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--arrow hl--operator\">=></span> <span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">{</span>\n        level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--function\">parseInt</span><span class=\"hl--token hl--punctuation\">(</span>header<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">tagName</span><span class=\"hl--token hl--punctuation\">[</span><span class=\"hl--token hl--number\">1</span><span class=\"hl--token hl--punctuation\">]</span><span class=\"hl--token hl--punctuation\">,</span> <span class=\"hl--token hl--number\">10</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">,</span>\n        title<span class=\"hl--token hl--operator\">:</span> header<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">textContent</span><span class=\"hl--token hl--punctuation\">,</span>\n        anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#'</span> <span class=\"hl--token hl--operator\">+</span> header<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">getAttribute</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--string\">'id'</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">,</span>\n    <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n<span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">;</span>\n</code></pre></div>\n  </pre>\n<p>Using the above markdown text, it will return us the following output:</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--punctuation\">[</span>\n  <span class=\"hl--token hl--punctuation\">{</span> level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">1</span><span class=\"hl--token hl--punctuation\">,</span> title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'First header'</span><span class=\"hl--token hl--punctuation\">,</span> anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#first-header'</span> <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">,</span>\n  <span class=\"hl--token hl--punctuation\">{</span> level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">2</span><span class=\"hl--token hl--punctuation\">,</span> title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'Second level header'</span><span class=\"hl--token hl--punctuation\">,</span>anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#second-level-header'</span> <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">,</span>\n  <span class=\"hl--token hl--punctuation\">{</span> level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">3</span><span class=\"hl--token hl--punctuation\">,</span> title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'Third level header'</span><span class=\"hl--token hl--punctuation\">,</span> anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#third-level-header'</span> <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">,</span>\n  <span class=\"hl--token hl--punctuation\">{</span> level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">2</span><span class=\"hl--token hl--punctuation\">,</span> title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'Another second level header'</span><span class=\"hl--token hl--punctuation\">,</span> anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#another-second-level-header'</span> <span class=\"hl--token hl--punctuation\">}</span>\n<span class=\"hl--token hl--punctuation\">]</span>\n</code></pre></div>\n  </pre>\n<blockquote>\n<p>Alternatively you can test the above function with this page itself. You can copy the function and run\nthe following code on the browser's console</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--console hl--class-name\">console</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">log</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--known-class-name hl--class-name\">JSON</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">stringify</span><span class=\"hl--token hl--punctuation\">(</span>\n  <span class=\"hl--token hl--function\">createPlainToc</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--dom hl--variable\">window</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">document</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">querySelector</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--string\">'.articleBody'</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span>\n<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n</code></pre></div>\n  </pre>\n</blockquote>\n<h2 id=\"tree-table-of-content\">Tree table of content</h2>\n<p>Most of the time we will be interested in creating a tree representation of the data.\nIn this way, we can create a recursive component that runs through the tree. We can reuse our previous function and build the data using a stack and tacking advantage of object references in Javascript. We must perform two validations:</p>\n<ol>\n<li>We force all root nodes to have the same level, but not a minimum one.</li>\n<li>We force all children nodes to have the parent's level + 1.</li>\n</ol>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--keyword\">function</span> <span class=\"hl--token hl--function\">createTreeToc</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--parameter\">domElement<span class=\"hl--token hl--punctuation\">,</span> throwOnNotTree <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--boolean\">true</span></span><span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--punctuation\">{</span>\n    <span class=\"hl--token hl--keyword\">const</span> treeItems <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--function\">createPlainToc</span><span class=\"hl--token hl--punctuation\">(</span>domElement<span class=\"hl--token hl--punctuation\">)</span>\n        <span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">map</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--parameter\">item</span> <span class=\"hl--token hl--arrow hl--operator\">=></span> <span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">{</span> <span class=\"hl--token hl--spread hl--operator\">...</span>item<span class=\"hl--token hl--punctuation\">,</span> children<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--punctuation\">[</span><span class=\"hl--token hl--punctuation\">]</span> <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n    <span class=\"hl--token hl--keyword\">const</span> tree <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--punctuation\">[</span><span class=\"hl--token hl--punctuation\">]</span><span class=\"hl--token hl--punctuation\">;</span>\n    <span class=\"hl--token hl--keyword\">const</span> stack <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--punctuation\">[</span><span class=\"hl--token hl--punctuation\">]</span><span class=\"hl--token hl--punctuation\">;</span>\n    treeItems<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">forEach</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--parameter\">item</span><span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--arrow hl--operator\">=></span> <span class=\"hl--token hl--punctuation\">{</span>\n        <span class=\"hl--token hl--keyword\">let</span> parentItem <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--keyword hl--null hl--nil\">null</span><span class=\"hl--token hl--punctuation\">;</span>\n        <span class=\"hl--token hl--keyword hl--control-flow\">do</span> <span class=\"hl--token hl--punctuation\">{</span>\n            parentItem <span class=\"hl--token hl--operator\">=</span> stack<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">pop</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n        <span class=\"hl--token hl--punctuation\">}</span> <span class=\"hl--token hl--keyword hl--control-flow\">while</span> <span class=\"hl--token hl--punctuation\">(</span>parentItem <span class=\"hl--token hl--operator\">&amp;&amp;</span> parentItem<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">level</span> <span class=\"hl--token hl--operator\">>=</span> item<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">level</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n        <span class=\"hl--token hl--keyword hl--control-flow\">if</span> <span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--operator\">!</span>parentItem<span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--punctuation\">{</span>\n            <span class=\"hl--token hl--comment\">// All nodes in tree[] must have the same level. </span>\n            <span class=\"hl--token hl--keyword\">const</span> prevTreeItem <span class=\"hl--token hl--operator\">=</span> tree<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">pop</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n            <span class=\"hl--token hl--keyword hl--control-flow\">if</span> <span class=\"hl--token hl--punctuation\">(</span>prevTreeItem<span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--punctuation\">{</span>\n                <span class=\"hl--token hl--keyword hl--control-flow\">if</span> <span class=\"hl--token hl--punctuation\">(</span>throwOnNotTree <span class=\"hl--token hl--operator\">&amp;&amp;</span> item<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">level</span> <span class=\"hl--token hl--operator\">!==</span> prevTreeItem<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">level</span><span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--punctuation\">{</span>\n                    <span class=\"hl--token hl--keyword hl--control-flow\">throw</span> <span class=\"hl--token hl--keyword\">new</span> <span class=\"hl--token hl--class-name\">Error</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--template-string\"><span class=\"hl--token hl--template-punctuation hl--string\">`</span><span class=\"hl--token hl--string\">Root titles dont have same level on: \"</span><span class=\"hl--token hl--interpolation\"><span class=\"hl--token hl--interpolation-punctuation hl--punctuation\">${</span>item<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">title</span><span class=\"hl--token hl--interpolation-punctuation hl--punctuation\">}</span></span><span class=\"hl--token hl--string\">\"</span><span class=\"hl--token hl--template-punctuation hl--string\">`</span></span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n                <span class=\"hl--token hl--punctuation\">}</span>\n\n                tree<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">push</span><span class=\"hl--token hl--punctuation\">(</span>prevTreeItem<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n            <span class=\"hl--token hl--punctuation\">}</span>\n\n            tree<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">push</span><span class=\"hl--token hl--punctuation\">(</span>item<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n            stack<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">push</span><span class=\"hl--token hl--punctuation\">(</span>item<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n        <span class=\"hl--token hl--punctuation\">}</span> <span class=\"hl--token hl--keyword hl--control-flow\">else</span> <span class=\"hl--token hl--punctuation\">{</span>\n            <span class=\"hl--token hl--keyword hl--control-flow\">if</span> <span class=\"hl--token hl--punctuation\">(</span>throwOnNotTree <span class=\"hl--token hl--operator\">&amp;&amp;</span> parentItem<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">level</span> <span class=\"hl--token hl--operator\">!==</span> <span class=\"hl--token hl--punctuation\">(</span>item<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">level</span> <span class=\"hl--token hl--operator\">-</span> <span class=\"hl--token hl--number\">1</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span> <span class=\"hl--token hl--punctuation\">{</span>\n                <span class=\"hl--token hl--comment\">// All nodes in tree[] must have the same level. </span>\n                <span class=\"hl--token hl--keyword hl--control-flow\">throw</span> <span class=\"hl--token hl--keyword\">new</span> <span class=\"hl--token hl--class-name\">Error</span><span class=\"hl--token hl--punctuation\">(</span>\n                    <span class=\"hl--token hl--template-string\"><span class=\"hl--token hl--template-punctuation hl--string\">`</span><span class=\"hl--token hl--string\">The title \"</span><span class=\"hl--token hl--interpolation\"><span class=\"hl--token hl--interpolation-punctuation hl--punctuation\">${</span>item<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">title</span><span class=\"hl--token hl--interpolation-punctuation hl--punctuation\">}</span></span><span class=\"hl--token hl--string\">\" is not a direct children of its parent</span><span class=\"hl--token hl--template-punctuation hl--string\">`</span></span>\n                <span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n            <span class=\"hl--token hl--punctuation\">}</span>\n\n            stack<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">push</span><span class=\"hl--token hl--punctuation\">(</span>parentItem<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n            stack<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">push</span><span class=\"hl--token hl--punctuation\">(</span>item<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n            parentItem<span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">children</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">push</span><span class=\"hl--token hl--punctuation\">(</span>item<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n        <span class=\"hl--token hl--punctuation\">}</span>\n    <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n    <span class=\"hl--token hl--keyword hl--control-flow\">return</span> tree<span class=\"hl--token hl--punctuation\">;</span>\n<span class=\"hl--token hl--punctuation\">}</span>\n</code></pre></div>\n  </pre>\n<p>Using the previous markdown we will have a well-defined tree for each top-level header and their associated children.</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--punctuation\">[</span>\n  <span class=\"hl--token hl--punctuation\">{</span>\n    level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">1</span><span class=\"hl--token hl--punctuation\">,</span>\n    title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'First header'</span><span class=\"hl--token hl--punctuation\">,</span>\n    anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#first-header'</span><span class=\"hl--token hl--punctuation\">,</span>\n    children<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--punctuation\">[</span>\n      <span class=\"hl--token hl--punctuation\">{</span>\n        level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">2</span><span class=\"hl--token hl--punctuation\">,</span>\n        title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'Second level header'</span><span class=\"hl--token hl--punctuation\">,</span>\n        anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#second-level-header'</span><span class=\"hl--token hl--punctuation\">,</span>\n        children<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--punctuation\">[</span>\n          <span class=\"hl--token hl--punctuation\">{</span> level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">3</span><span class=\"hl--token hl--punctuation\">,</span> title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'Third level header'</span><span class=\"hl--token hl--punctuation\">,</span> anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#third-level-header'</span><span class=\"hl--token hl--punctuation\">,</span> children<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--punctuation\">[</span><span class=\"hl--token hl--punctuation\">]</span><span class=\"hl--token hl--punctuation\">}</span>\n        <span class=\"hl--token hl--punctuation\">]</span>\n      <span class=\"hl--token hl--punctuation\">}</span><span class=\"hl--token hl--punctuation\">,</span>\n      <span class=\"hl--token hl--punctuation\">{</span>\n        level<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--number\">2</span><span class=\"hl--token hl--punctuation\">,</span>\n        title<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'Another second level header'</span><span class=\"hl--token hl--punctuation\">,</span>\n        anchor<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--string\">'#another-second-level-header'</span><span class=\"hl--token hl--punctuation\">,</span>\n        children<span class=\"hl--token hl--operator\">:</span> <span class=\"hl--token hl--punctuation\">[</span><span class=\"hl--token hl--punctuation\">]</span>\n      <span class=\"hl--token hl--punctuation\">}</span>\n    <span class=\"hl--token hl--punctuation\">]</span>\n  <span class=\"hl--token hl--punctuation\">}</span>\n<span class=\"hl--token hl--punctuation\">]</span>\n</code></pre></div>\n  </pre>\n<p>Of course opening the dev tools you can paste the previous functions, an test it with this page!</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--console hl--class-name\">console</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">log</span><span class=\"hl--token hl--punctuation\">(</span>\n  <span class=\"hl--token hl--known-class-name hl--class-name\">JSON</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">stringify</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--function\">createTreeToc</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--dom hl--variable\">window</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">document</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">querySelector</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--string\">'.articleBody'</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span>\n<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span> \n</code></pre></div>\n  </pre>\n<h2 id=\"create-the-tables-of-content-on-the-server-side-with-jsdom\">Create the tables of content on the server-side with jsdom</h2>\n<p>If you want to create the TOC on your node server or at the moment of compiling your markdown files, we can reuse our functions by installing <a href=\"https://github.com/jsdom/jsdom\" target=\"_blank\">jsdom</a>.</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-bash\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">bash</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-bash\"><code><span class=\"hl--token hl--function\">yarn</span> <span class=\"hl--token hl--function\">add</span> --dev jsdom\n</code></pre></div>\n  </pre>\n<p>As the Html will be the hole markdown file we can create the table of content for the whole <code>window.document</code>.</p>\n<pre class=\"terminal\">\n  <div class=\"bar bar-language-javascript\">\n    <div class=\"btn\"></div>\n    <div class=\"bar-title\">javascript</div>\n    <div><button class=\"button copy is-small is-pulled-right\">Copy</button></div>  \n  </div>\n  <div class=\"body\"><pre class=\"language-javascript\"><code><span class=\"hl--token hl--comment\">// Asuming that html is the rendered markdown with html and nothing else.</span>\n<span class=\"hl--token hl--keyword\">const</span> domElement <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--keyword\">new</span> <span class=\"hl--token hl--class-name\">jsdom<span class=\"hl--token hl--punctuation\">.</span>JSDOM</span><span class=\"hl--token hl--punctuation\">(</span>html<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">window</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--property-access\">document</span><span class=\"hl--token hl--punctuation\">;</span>\n\n<span class=\"hl--token hl--keyword\">const</span> toc <span class=\"hl--token hl--operator\">=</span> <span class=\"hl--token hl--function\">createTreeToc</span><span class=\"hl--token hl--punctuation\">(</span>domElement<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span>\n\n<span class=\"hl--token hl--console hl--class-name\">console</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">log</span><span class=\"hl--token hl--punctuation\">(</span><span class=\"hl--token hl--known-class-name hl--class-name\">JSON</span><span class=\"hl--token hl--punctuation\">.</span><span class=\"hl--token hl--method hl--function hl--property-access\">stringify</span><span class=\"hl--token hl--punctuation\">(</span>toc<span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">)</span><span class=\"hl--token hl--punctuation\">;</span> \n</code></pre></div>\n  </pre>\n<p>Using this last approach its how I set up a simple demo on Github.</p>\n<div class=\"github-link-container\"><a href=\"https://github.com/angelblanco/demo-markdown-it-anchor-toc-jsdom\" target=\"__blank\" class=\"button is-medium\"><span class=\"icon\"><i class=\"fab fa-github\"></i></span><span>Clone the demo of this article on Github</span></a></div><h2 id=\"conclusion\">Conclusion</h2>\n<p>Using <code>jsdom</code> to parse the whole HTML file to get the table of content might look like an overhead. However, doing this stuff at\nyour javascript compile stage will get you the fastest loading times for your web because it could be server-side rendered. On the other hand,\nif you parse your TOC in the browser you could access all the DOM elements on the web and not only the markdown ones.</p>\n<p>Thank you very much for your time. Hope to see you again 🚀</p>\n"}